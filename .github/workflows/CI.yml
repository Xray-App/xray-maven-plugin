# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build

on:
  push:
    branches:
      - main
      - branch-*

  workflow_dispatch:

  pull_request:
    branches: [ main ]
    
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8', '11', '17', '21' ]
        
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Check broken links in documentation using Markup Link Checker (mlc)
      uses: becheran/mlc@v0.18.0
      if: runner.os == 'Linux'
    - name: Set up Java ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: mvn -B -Dgpg.skip=true clean compile verify package --file pom.xml
    - name: Analyze with SonarCloud
      if: matrix.java == '17'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
      run: mvn sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectKey=Xray-App_xray-maven-plugin -Dsonar.organization=xray-app -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco-merged-test-coverage-report/jacoco.xml


    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.0.1
      if: matrix.java == '17'

    - name: Log coverage percentage
      if: matrix.java == '17'
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

    - name: Commit the JaCoCo badge (if it changed)
      if: matrix.java == '17'
      run: |
        if [[ `git status --porcelain -uno` ]]; then
          git config --global user.name 'Sergio Freire'
          git config --global user.email 'bitcoder@users.noreply.github.com'
          git add .github/badges/jacoco.svg
          git commit -m "Autogenerated JaCoCo coverage badge"
          git push
        fi

    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v4
      if: matrix.java == '17'
      with:
        name: jacoco-report
        path: target/site/jacoco-merged-test-coverage-report/
        
    - name: Push results to Xray Cloud
      continue-on-error: true
      env:
        XRAYCLOUD_CLIENT_ID: ${{ secrets.XRAYCLOUD_CLIENT_ID }}
        XRAYCLOUD_CLIENT_SECRET: ${{ secrets.XRAYCLOUD_CLIENT_SECRET }}
        XRAYCLOUD_TEST_PLAN_KEY: ${{ secrets.XRAYCLOUD_TEST_PLAN_KEY }}
        REVISON: ${{ github.ref_name}}
        TEST_ENVIRONMENT: java${{ matrix.java }}
      run: mvn -Dxray.clientId=${{ env.XRAYCLOUD_CLIENT_ID }} -Dxray.clientSecret=${{ env.XRAYCLOUD_CLIENT_SECRET }} -Dxray.testEnvironment=${{ env.TEST_ENVIRONMENT }} -Dxray.testPlanKey=${{ env.XRAYCLOUD_TEST_PLAN_KEY }} -Dxray.revision=${{ env.REVISON }} xray:import-results
